name: Build, Lint and Push borgbackup Docker Image

on:
  push:
    paths:
      - 'borgbackup/**'
      - '.github/workflows/docker-borgbackup.yml'
  pull_request:
    paths:
      - 'borgbackup/**'
      - '.github/workflows/docker-borgbackup.yml'
  schedule:
    - cron: '0 2 * * *' # Every night at 2:00 UTC

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/borgbackup

jobs:
  hadolint:
    name: Lint Dockerfile with hadolint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: borgbackup/Dockerfile

  shellcheck:
    name: Lint shell scripts with ShellCheck
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Run ShellCheck on scripts
        run: |
          shellcheck borgbackup/backup.sh
          shellcheck borgbackup/entrypoint.sh

  build-and-push:
    needs: [hadolint, shellcheck]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract date tag
        id: date
        run: echo "tag=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Generate random tag for branch builds
        id: random
        run: |
          if [ "${{ github.ref_type }}" = "branch" ] && [ "${{ github.ref_name }}" != "main" ]; then
            RAND=$(head /dev/urandom | tr -dc a-z0-9 | head -c6)
            echo "branch_tag=${{ github.ref_name }}-${RAND}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image (main branch, scheduled, or merged PR)
        if: github.ref_name == 'main' || github.event_name == 'schedule' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
        uses: docker/build-push-action@v5
        with:
          context: ./borgbackup
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.date.outputs.tag }}

      - name: Build and push Docker image for branch builds (not main)
        if: github.ref_type == 'branch' && github.ref_name != 'main'
        uses: docker/build-push-action@v5
        with:
          context: ./borgbackup
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.random.outputs.branch_tag }}

      - name: Build Docker image (pull request, no push)
        if: github.event_name == 'pull_request' && github.event.pull_request.merged != true
        uses: docker/build-push-action@v5
        with:
          context: ./borgbackup
          push: false
          tags: |
            ${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}

  cleanup:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Delete old images from GHCR (keep last 14 days)
        uses: snok/container-retention-policy@v2
        with:
          image-names: borgbackup
          cut-off: 14 days ago
          account-type: user
          token: ${{ secrets.GITHUB_TOKEN }}
          untagged-only: false